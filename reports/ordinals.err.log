Traceback (most recent call last):
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/shishengli/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/shishengli/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
op_list = inner_witnessscript_asm[4:-1]

def decode_inscription(op_list):
    stack = []
    idx = 0
    while idx < len(op_list):
        op = op_list[idx]
        if op == 'OP_0':
            stack.append('00')
            idx += 1
            continue
        if op.startswith('OP_PUSHNUM_'):
            num_str = op[len('OP_PUSHNUM_'):]
            num = int(num_str)
            assert num >= 0 and num <= 16
            stack.append(f'{num:02x}')
            idx += 1
            continue
        if op.startswith('OP_PUSH'):
            stack.append(op_list[idx + 1])
            idx += 2
            continue
        assert False

    assert bytes.fromhex(stack[0]).decode() == 'ord'
    stack = stack[1:]

    meta = {}
    body = bytes(0)
    idx = 0
    while idx < len(stack):
        key = bytes.fromhex(stack[idx])
        assert len(key) == 1
        key_i = int(key[0])
        if key_i == 0:
            idx += 1
            while idx < len(stack):
                body += bytes.fromhex(stack[idx])
                idx += 1
            break
        value = stack[idx + 1]
        key_name = 'unknown_' + str(key_i)
        as_str = False
        match key_i:
            case 1:
                key_name = 'content-type'
                as_str = True
            case 2:
                key_name = 'pointer'
            case 3:
                key_name = 'parent'
            case 5:
                key_name = 'metadata'
            case 7:
                key_name = 'metaprotocol'
            case 9:
                key_name = 'content_encoding'
                as_str = True
            case 11:
                key_name = 'delegate'
        if as_str == True:
            value = bytes.fromhex(value).decode()
        meta[key_name] = value
        idx += 2

    return (meta, body)

print(json.dumps(meta, indent=2))
print(body)

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 68[0m
[1;32m     64[0m         idx [38;5;241m+[39m[38;5;241m=[39m [38;5;241m2[39m
[1;32m     66[0m     [38;5;28;01mreturn[39;00m (meta, body)
[0;32m---> 68[0m [38;5;28mprint[39m(json[38;5;241m.[39mdumps(meta, indent[38;5;241m=[39m[38;5;241m2[39m))
[1;32m     69[0m [38;5;28mprint[39m(body)

[0;31mNameError[0m: name 'meta' is not defined
NameError: name 'meta' is not defined

